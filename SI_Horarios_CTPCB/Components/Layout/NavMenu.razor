<layout Sider>
    <LayoutSider> 
        <LayoutSiderContent>
<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light"
     Class="bar">
     <BarBrand class="bar-brand">
        <BarLink To="MenuPrincipal" class="navbar-brand">
            <img src="Img/Logos/logo_ctp_plan.png" alt="Logo" 
                 width= "180px"
                 >
        </BarLink>
    </BarBrand>

    <h5 class="mx-3 mb-4"><Icon Name="IconName.User" Class="px-2" /> @userName</h5>
    <BarMenu Class="bar-menu d-flex flex-column" BarMode="BarMode.Vertical">
        <BarStart>
            @* Dropdowns *@
            <div class="d-flex flex-column">
            <BarItem Class="bar-item">
                <BarDropdown>
                    <BarDropdownToggle>Mantenimientos</BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsMantenimiento)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="30" width="30" class="imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-2" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>


             <BarItem Class="bar-item">
                <BarDropdown>
                    <BarDropdownToggle> Reportes </BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsReportes)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="60" width="60" class="d-inline-block align-top imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-3" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
            <BarItem Class="bar-item">
                <BarDropdown>
                    <BarDropdownToggle> Seguridad </BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsSeguridad)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="60" width="60" class="d-inline-block align-top imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-3" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
            </div>
        </BarStart>
    </BarMenu>
 </Bar>
 </LayoutSiderContent>
    </LayoutSider>
</layout>

@* <Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light">
    <h5 class="mx-5"><Icon Name="IconName.User" Class="px-2" /> @userName</h5>
    <BarToggler />
    <BarMenu BarMenu Class="bar-menu" BarMode="BarMode.Vertical" >
        <BarStart>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle>Mantenimientos</BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsMantenimiento)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="60" width="60" class="d-inline-block align-top imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-3" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle> Horarios </BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsHorarios)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="60" width="60" class="d-inline-block align-top imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-3" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle> Reportes </BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsReportes)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="60" width="60" class="d-inline-block align-top imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-3" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle> Seguridad </BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var option in optionsSeguridad)
                        {
                            <BarDropdownItem>
                                <img src="@option.ImgUrl" height="60" width="60" class="d-inline-block align-top imgbarDropdown" alt="Icono" />
                                <a class="btn text-item text-dark p-3" href="@option.Href">@option.Description</a>
                            </BarDropdownItem>
                        }
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
        </BarStart>
    </BarMenu>
    
    <BarBrand>
        <BarLink To="MenuPrincipalCPC" class="navbar-brand mr-5">
            <img src="Img/Logos/Coopemep_Blanco_Horizontal.png" height="75" width="250" class="d-inline-block align-top logoBarLink" alt="Coopemep" />
        </BarLink>
    </BarBrand>
</Bar>
 *@
@code {
    public class Option
    {
        public string? Href { get; set; }
        public string? Description { get; set; }
        public string? ImgUrl { get; set; }
    }
    private List<Option> optionsMantenimiento = new List<Option>
    {
        new Option { Href = "Mantenimientos/GestionProf", Description = "Gestion de Profesores", ImgUrl = "Img/Icon/Color/ICONOS DEL PROYECTO Onboarding Coopemep nov24 2_catalogo aprobacion.svg" },
        new Option { Href = "Mantenimientos/GestionMateriasLecciones", Description = "Gestion Materias y Lecciones", ImgUrl = "Img/Icon/Color/ICONOS DEL PROYECTO Onboarding Coopemep nov24 2_catalogo aprobacion.svg" },
    };

    

    private List<Option> optionsSeguridad = new List<Option>
    {
        new Option { Href = "Mantenimientos/Seguridad", Description = "Seguridad", ImgUrl = "Img/Icon/Color/ICONOS DEL PROYECTO Onboarding Coopemep nov24 2_catalogo aprobacion.svg" },
    };

    private List<Option> optionsReportes = new List<Option>
    {
        new Option { Href = "Reportes/ReportesHorarios", Description = "Reporte de Horarios", ImgUrl = "Img/Icon/Color/ICONOS DEL PROYECTO Onboarding Coopemep nov24 2_catalogo aprobacion.svg" },
    };

   

    private List<Option> optionsHorarios = new List<Option>
    {
        new Option { Href = "Horarios/GenHorarios", Description = "Generacion de Horarios", ImgUrl = "Img/Icon/Color/ICONOS DEL PROYECTO Onboarding Coopemep nov24 2_catalogo aprobacion.svg" },
    };

   

    private string userName;

    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userName = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value ?? "Usuario desconocido";
        }
        else
        {
            userName = "Invitado";
        }
    }
} 